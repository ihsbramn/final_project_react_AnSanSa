{"ast":null,"code":"var _jsxFileName = \"C:\\\\sandbox\\\\final_project_react_AnSanSa\\\\src\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Posts(props) {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const {\n    postId\n  } = useParams();\n  const {\n    name\n  } = useParams();\n  useEffect(() => {\n    let uri = \"posts/\";\n    if (postId) uri += postId;\n    if (name) uri += \"author/\" + name;\n    fetch(props.apiUrl + uri).then(response => response.json()).then(response => {\n      setPosts(response);\n    });\n  }, [postId, name]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [posts.map(post => /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"main\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.resume\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Related Links\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"alt\",\n        children: post.relatedlinks.map((link, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: link\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: post.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, post._id.$oid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Back to Home Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"BDAYypOCh5ncGW+lA6jj3DA7Dc8=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/sandbox/final_project_react_AnSanSa/src/Posts.js"],"names":["useState","useEffect","useParams","Link","Posts","props","posts","setPosts","postId","name","uri","fetch","apiUrl","then","response","json","map","post","title","resume","text","relatedlinks","link","index","tags","tag","author","_id","$oid"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAWP,SAAS,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,GAAG,GAAG,QAAV;AACA,QAAIF,MAAJ,EAAYE,GAAG,IAAIF,MAAP;AACZ,QAAIC,IAAJ,EAAUC,GAAG,IAAI,YAAYD,IAAnB;AAEVE,IAAAA,KAAK,CAACN,KAAK,CAACO,MAAN,GAAeF,GAAhB,CAAL,CACGG,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClBP,MAAAA,QAAQ,CAACO,QAAD,CAAR;AACD,KAJH;AAKD,GAVQ,EAUN,CAACN,MAAD,EAASC,IAAT,CAVM,CAAT;AAYA,sBACE;AAAA,eACGH,KAAK,CAACU,GAAN,CAAWC,IAAD,iBACT;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAA,+BACE;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,kBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,kBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA,kBACGH,IAAI,CAACI,YAAL,CAAkBL,GAAlB,CAAsB,CAACM,IAAD,EAAOC,KAAP,kBACrB;AAAA,oBAAiBD;AAAjB,WAASC,KAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAPF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AAAA,kBACGN,IAAI,CAACO,IAAL,CAAUR,GAAV,CAAc,CAACS,GAAD,EAAMF,KAAN,kBACb;AAAA,oBAAiBE;AAAjB,WAASF,KAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAbF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE;AAAA,kBAAIN,IAAI,CAACS;AAAT;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA,OAAcT,IAAI,CAACU,GAAL,CAASC,IAAvB;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAwBE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA,KAAWnB,IAAX;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA/CuBL,K;UAEHF,S,EACFA,S;;;KAHKE,K","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Posts(props) {\r\n  const [posts, setPosts] = useState([]);\r\n  const { postId } = useParams();\r\n  const { name } = useParams();\r\n\r\n  useEffect(() => {\r\n    let uri = \"posts/\";\r\n    if (postId) uri += postId;\r\n    if (name) uri += \"author/\" + name;\r\n\r\n    fetch(props.apiUrl + uri)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setPosts(response);\r\n      });\r\n  }, [postId, name]);\r\n\r\n  return (\r\n    <span key={name}>\r\n      {posts.map((post) => (\r\n        <section key={post._id.$oid}>\r\n          <header className=\"main\">\r\n            <h1>{post.title}</h1>\r\n          </header>\r\n          <h3>{post.resume}</h3>\r\n          <p>{post.text}</p>\r\n          <h4>Related Links</h4>\r\n          <ul className=\"alt\">\r\n            {post.relatedlinks.map((link, index) => (\r\n              <li key={index}>{link}</li>\r\n            ))}\r\n          </ul>\r\n          <h4>Tags</h4>\r\n          <ul>\r\n            {post.tags.map((tag, index) => (\r\n              <li key={index}>{tag}</li>\r\n            ))}\r\n          </ul>\r\n          <h4>Author</h4>\r\n          <p>{post.author}</p>\r\n        </section>\r\n      ))}\r\n      <p>\r\n        <Link to=\"/\">Back to Home Page</Link>\r\n      </p>\r\n    </span>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}